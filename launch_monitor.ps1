# Canvas AI Assistant - Pipeline Monitor Launcher (PowerShell)
# Quick launcher for the monitoring dashboard

param(
    [switch]$Help
)

function Show-Help {
    Write-Host "üîß Canvas AI Assistant - Pipeline Monitor Launcher" -ForegroundColor Cyan
    Write-Host "=" * 60 -ForegroundColor Cyan
    Write-Host ""
    Write-Host "Usage:" -ForegroundColor Green
    Write-Host "  .\launch_monitor.ps1          # Launch the monitoring dashboard" -ForegroundColor White
    Write-Host "  .\launch_monitor.ps1 -Help    # Show this help" -ForegroundColor White
    Write-Host ""
    Write-Host "What this does:" -ForegroundColor Green
    Write-Host "  ‚Ä¢ Opens the pipeline monitoring dashboard in your browser" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ Shows real-time API status and data statistics" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ Allows testing search functionality" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ Provides knowledge base management tools" -ForegroundColor Gray
}

if ($Help) {
    Show-Help
    exit 0
}

Write-Host "üöÄ Canvas AI Assistant - Pipeline Monitor Launcher" -ForegroundColor Cyan
Write-Host "=" * 60 -ForegroundColor Cyan

# Check if HTML file exists
$htmlFile = Join-Path $PSScriptRoot "monitor_dashboard.html"

if (-not (Test-Path $htmlFile)) {
    Write-Host "‚ùå Monitor dashboard file not found!" -ForegroundColor Red
    Write-Host "Expected location: $htmlFile" -ForegroundColor Yellow
    Read-Host "Press Enter to exit"
    exit 1
}

Write-Host "üìä Dashboard found: $htmlFile" -ForegroundColor Green
Write-Host "üåê Opening in your default browser..." -ForegroundColor Yellow

try {
    # Convert to file URL for proper browser opening
    $fileUrl = "file:///" + $htmlFile.Replace('\', '/')
    
    # Open in default browser
    Start-Process $fileUrl
    
    Write-Host "‚úÖ Monitor dashboard launched successfully!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìã Dashboard Features:" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ Real-time API status monitoring" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ Document count and statistics" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ Live search testing" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ Activity logging" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ Knowledge base management" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üîÑ The dashboard will auto-refresh data every 30 seconds when enabled" -ForegroundColor Blue
    Write-Host "üí° Tip: Bookmark this page for quick access!" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "üîó Dashboard URL: $fileUrl" -ForegroundColor Gray
    
} catch {
    Write-Host "‚ùå Failed to launch browser: $_" -ForegroundColor Red
    Write-Host "üîó Manual URL: file:///$($htmlFile.Replace('\', '/'))" -ForegroundColor Yellow
}

Write-Host ""
Read-Host "Press Enter to close this launcher"
